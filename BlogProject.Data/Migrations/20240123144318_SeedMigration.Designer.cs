// <auto-generated />
using System;
using BlogProject.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogProject.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240123144318_SeedMigration")]
    partial class SeedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogProject.Entity.Entity.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0735bd59-d05a-4954-8659-6405c0486901"),
                            CategoryId = new Guid("504052c0-a5c6-4738-b668-3d7e088d6334"),
                            Content = "Kedilerin su içtiği kaptan su içebilirsiniz çünkü kediler çok temiz hayvanlardır",
                            CreatedBy = "Talha Tan",
                            CreatedDate = new DateTime(2024, 1, 23, 17, 43, 17, 923, DateTimeKind.Local).AddTicks(7151),
                            ImageId = new Guid("6445f48b-373c-4fde-a5f3-1425faf7f5da"),
                            IsDeleted = false,
                            Title = "Kedi Özellikleri",
                            ViewCount = 20
                        },
                        new
                        {
                            Id = new Guid("bfd4728a-6e81-4bfd-83c5-1b554db12f01"),
                            CategoryId = new Guid("800c5be4-0448-4e66-a96a-ccc8cc0d65e1"),
                            Content = "Hipopotamların sütü pembe renktedir çünkü salgıladıkları kırmızı ve parlak turuncu renkteki asitlerin birleşimindes pembe renk oluşur",
                            CreatedBy = "Talha Tan",
                            CreatedDate = new DateTime(2024, 1, 23, 17, 43, 17, 923, DateTimeKind.Local).AddTicks(7156),
                            ImageId = new Guid("ee4c53f9-5201-4002-a639-9bbce2cee833"),
                            IsDeleted = false,
                            Title = "Hipopotam Özellikleri",
                            ViewCount = 100
                        });
                });

            modelBuilder.Entity("BlogProject.Entity.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("504052c0-a5c6-4738-b668-3d7e088d6334"),
                            CreatedBy = "Talha Tan",
                            CreatedDate = new DateTime(2024, 1, 23, 17, 43, 17, 923, DateTimeKind.Local).AddTicks(8199),
                            IsDeleted = false,
                            Name = "Hayvan"
                        },
                        new
                        {
                            Id = new Guid("800c5be4-0448-4e66-a96a-ccc8cc0d65e1"),
                            CreatedBy = "Talha Tan",
                            CreatedDate = new DateTime(2024, 1, 23, 17, 43, 17, 923, DateTimeKind.Local).AddTicks(8202),
                            IsDeleted = false,
                            Name = "Hayvan"
                        });
                });

            modelBuilder.Entity("BlogProject.Entity.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6445f48b-373c-4fde-a5f3-1425faf7f5da"),
                            CreatedBy = "Talha Tan",
                            CreatedDate = new DateTime(2024, 1, 23, 17, 43, 17, 923, DateTimeKind.Local).AddTicks(9158),
                            FileName = "images/KediFotosu",
                            FileType = "png",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ee4c53f9-5201-4002-a639-9bbce2cee833"),
                            CreatedBy = "Talha Tan",
                            CreatedDate = new DateTime(2024, 1, 23, 17, 43, 17, 923, DateTimeKind.Local).AddTicks(9169),
                            FileName = "images/HippoFotosu",
                            FileType = "jpg",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("BlogProject.Entity.Entity.Article", b =>
                {
                    b.HasOne("BlogProject.Entity.Entity.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogProject.Entity.Entity.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("BlogProject.Entity.Entity.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("BlogProject.Entity.Entity.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
